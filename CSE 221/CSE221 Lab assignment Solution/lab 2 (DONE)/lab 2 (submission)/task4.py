# -*- coding: utf-8 -*-
"""task4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SsSVSww_2rZylkV5fbTsAbjejnqEMaa9
"""



#task 4

patientQueue = []

def enqueue(name_of_Patient):
    patientQueue.append(name_of_Patient)

def seeDoctor():
    patientQueue.pop()

def printQueue():
    for i in patientQueue:
        print(i)

def bubbleSort(arr):
    n = len(arr)
    swap = 0
    for i in range(n-1):
        for j in range(0, n-i-1):
            if arr[j][len(arr[j])-2] > arr[j + 1][len(arr[j])-2]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swap+=1
            if swap==0:
              return 

def heapify(arr, n, i):
    largest = i
    l = 2 * i + 1
    r = 2 * i + 2
    print(i,arr[i])
    if l < n and arr[i] < arr[l]:
        largest = l
    if r < n and arr[largest] < arr[r]:
        largest = r
    if largest != i:
        (arr[i], arr[largest]) = (arr[largest], arr[i])
        heapify(arr, n, largest)
  
def heapSort(arr):
    n = len(arr)
 
    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)

    for i in range(n - 1, 0, -1):
        (arr[i], arr[0]) = (arr[0], arr[i])
        heapify(arr, i, 0)

openfile = open("input4.txt","r")
openfile = openfile.readlines()
for i in openfile:
    if i != 'see doctor\n':
        enqueue(i)
        heapSort(patientQueue)
    else:
        seeDoctor()
printQueue()


import time
import math
import matplotlib.pyplot as plt
import numpy as np



x = [i for i in range(n)]
y = [0 for i in range(n)]
z = [0 for i in range(n)]

for i in range(n - 1):
    start = time.time()
    bubbleSort(x[i + 1])
    y[i + 1] = time.time() - start
    start = time.time()
    heapSort(x[i + 1])
    z[i + 1] = time.time() - start

x_interval = math.ceil(n / 10)
plt.plot(x, y, "r")
plt.plot(x, z, "b")
plt.xticks(np.arange(min(x), max(x) + 1, x_interval))
plt.xlabel("n-th position")
plt.ylabel("time")

plt.title("Comparing Time Complexity!")
plt.show()