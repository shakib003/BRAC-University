# -*- coding: utf-8 -*-
"""task2(ii)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VyGBzBvOz27qVthSx6A24Qi2DHR4XEx3
"""



#task 2(ii)

def merge(lst, l, m, r):
    n1 = m - l + 1
    left = lst[:n1 + 1]
    right = lst[n1 + 1:]
    i, j, k = 0, 0, 0
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            lst[k] = left[i]
            i = i + 1
            k = k + 1
        else:
            lst[k] = right[j]
            j = j + 1
            k = k + 1
    while i < len(left):
        lst[k] = left[i]
        i = i + 1
        k = k + 1
    while j < len(right):
        lst[k] = right[j]
        j = j + 1
        k = k + 1

def mergeSort(lst, l, r):
    if l < r:
        m =l + (r - l) // 2
        mergeSort(lst, l, m)
        mergeSort(lst, m + 1, r)
        merge(lst, l, m, r)
input_file=open("input2.txt","r")
output=open("output2.txt","w")
x=input_file.readlines()
ans=""
num_lst=[]
for i in range(1,len(x)):
    a=x[i].split()
    for j in a:
        num_lst.append(int(j))
n=len(num_lst)
mergeSort(num_lst,0,n-1)
for i in range(len(num_lst)):
    ans+=str(num_lst[i])+" "
output.writelines(ans[:-1])